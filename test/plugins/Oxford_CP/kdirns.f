      subroutine kdirns(xrot,TwinRot,iphase,L,nTwin,
     + ddir1,dnor1,dtwindir1,dtwinnor1,
     + caratio,cubicslip)
      
      implicit none
      integer :: i,j,k,slip
      integer,parameter :: m = 3
      integer,intent(in):: iphase,L,nTwin
      
      real*8,intent(in) :: xrot(m,m), TwinRot(nTwin,m,m), caratio
	  
	  ! activate cubic slip systems for CMSX-4 alloy
      real*8,intent(in) :: cubicslip	  
	  
      real*8,intent(out) :: ddir1(L,m),dnor1(L,m)
      real*8,intent(out) :: dtwindir1(nTwin,m),dtwinnor1(nTwin,m)

      real(kind=8) :: ddir(L,m),dnor(L,m)
	  real(kind=8) :: dtwindir(nTwin,m),dtwinnor(nTwin,m)
      real(kind=8) :: tdir(m),tnor(m)
      real(kind=8) :: ttwindir(m),ttwinnor(m)
      real(kind=8) :: tdir1(m),tnor1(m)
      real(kind=8) :: ttwindir1(m),ttwinnor1(m)

      real(kind=8) :: xdirmag,xnormag,xtwindirmag,xtwinnormag

         ddir1 = 0.0; dnor1 = 0.0 
      
      if(iphase .eq. 0) then !hcp
! 3<a> basal
        ddir(1,:) = (/-0.5000, 0.8660,  0.0000/)
        ddir(2,:) = (/1.0000,  0.0000,  0.0000/)
        ddir(3,:) = (/-0.5000, -0.8660, 0.0000/)
! 3<a> prismatic           
        ddir(4,:) = (/-0.5000, 0.8660,  0.0000/)
        ddir(5,:) = (/1.0000,  0.0000,  0.0000/)
        ddir(6,:) = (/-0.5000, -0.8660, 0.0000/)
! 6 <a> slip direc for 1st order pyramidal planes			 
         !ddir(7,:) = (/ -0.5000,    0.8660,         0./)
		 !ddir(8,:) = (/-0.5000,    0.8660,         0./)
		 !ddir(9,:) = (/1.0000,         0.,         0./)
		 !ddir(10,:) = (/1.0000,         0.,         0./)
		 !ddir(11,:) = (/-0.5000,   -0.8660,         0./)
		 !ddir(12,:) = (/-0.5000,  -0.8660,         0./)
! 6 <c+a> slip directions for 2nd order pyramidal slip planes			 
        ddir(7,:) = (/-0.3536, 0.6124, 0.7071/)
        ddir(8,:) = (/-0.3536, 0.6124, -0.7071/)
        ddir(9,:) = (/ 0.7071, 0.0000,  0.7071/)
        ddir(10,:) =(/ 0.7071, 0.0000, -0.7071/)
        ddir(11,:) =(/-0.3536,-0.6124,  0.7071/)
        ddir(12,:) =(/-0.3536,-0.6124, -0.7071/)
! basal plane for 3<a> slip
        dnor(1,:) = (/0.0000,0.0000,1.0000/)
        dnor(2,:) = (/0.0000,0.0000,1.0000/)
        dnor(3,:) = (/0.0000,0.0000,1.0000/)
 !prismatic planes for 3<a> slip          
        dnor(4,:) = (/-0.8660, -0.5000, 0.0000/)
        dnor(5,:) = (/ 0.0000,  -1.0000, 0.0000/)
        dnor(6,:) = (/ 0.8660,  -0.5000, 0.0000/)
! 6 1st order pyramidal slip planes for <a> slip		 
         !dnor(7,:) = (/-0.7500,   -0.4330,    0.5000/)
		 !dnor(8,:) = (/ 0.7500,    0.4330,    0.5000/)
		 !dnor(9,:) = (/ 0.,    0.8660,    0.5000/)
		 !dnor(10,:) = (/ 0.,   -0.8660,    0.5000/)
		 !dnor(11,:) = (/0.7500,   -0.4330,    0.5000/)
		 !dnor(12,:) = (/-0.7500,    0.4330,    0.5000/)           
! 6 2nd order pyramidalslip planes for <c+a> slip				 
         dnor(7,:) = (/ 0.3536, -0.6124,  0.7071/)
         dnor(8,:) = (/-0.3536,  0.6124,  0.7071/)
         dnor(9,:) = (/-0.7071,  0.0000,  0.7071/)
         dnor(10,:) =(/ 0.7071,  0.0000,  0.7071/)
         dnor(11,:) =(/ 0.3536,  0.6124,  0.7071/)
         dnor(12,:) =(/-0.3536, -0.6124,  0.7071/)         
      else if(iphase .eq. 1) then !bcc (24/48)
		 ddir(1,:) = (/-0.57735027,0.57735027,0.57735027/)
		 ddir(2,:) = (/0.57735027,-0.57735027,0.57735027/)
		 ddir(3,:) = (/0.57735027,0.57735027,0.57735027/)
		 ddir(4,:) = (/0.57735027,-0.57735027,0.57735027/)
		 ddir(5,:) = (/0.57735027,0.57735027,0.57735027/)
		 ddir(6,:) = (/0.57735027,0.57735027,-0.57735027/)
		 ddir(7,:) = (/0.57735027,0.57735027,0.57735027/)
		 ddir(8,:) = (/-0.57735027,0.57735027,0.57735027/)
		 ddir(9,:) = (/0.57735027,-0.57735027,0.57735027/)
		 ddir(10,:) = (/0.57735027,0.57735027,-0.57735027/)
		 ddir(11,:) = (/-0.57735027,0.57735027,0.57735027/)
		 ddir(12,:) = (/0.57735027,0.57735027,-0.57735027/)
		 !ddir(13,:) = (/0.57735027,0.57735027,-0.57735027/)
		 !ddir(14,:) = (/0.57735027,-0.57735027,0.57735027/)
		 !ddir(15,:) = (/-0.57735027,0.57735027,0.57735027/)
		 !ddir(16,:) = (/0.57735027,0.57735027,0.57735027/)
		 !ddir(17,:) = (/0.57735027,-0.57735027,0.57735027/)
		 !ddir(18,:) = (/0.57735027,0.57735027,-0.57735027/)
		 !ddir(19,:) = (/0.57735027,0.57735027,0.57735027/)
		 !ddir(20,:) = (/-0.57735027,0.57735027,0.57735027/)
		 !ddir(21,:) = (/-0.57735027,0.57735027,0.57735027/)
		 !ddir(22,:) = (/0.57735027,0.57735027,0.57735027/)
		 !ddir(23,:) = (/0.57735027,0.57735027,-0.57735027/)
		 !ddir(24,:) = (/0.57735027,-0.57735027,0.57735027/)
		 dnor(1,:) = (/0.70710678,0.70710678,0.00000000/)
		 dnor(2,:) = (/0.70710678,0.70710678,0.00000000/)
		 dnor(3,:) = (/-0.70710678,0.00000000,0.70710678/)
		 dnor(4,:) = (/-0.70710678,0.00000000,0.70710678/)
		 dnor(5,:) = (/-0.70710678,0.70710678,0.00000000/)
		 dnor(6,:) = (/-0.70710678,0.70710678,0.00000000/)
		 dnor(7,:) = (/0.00000000,0.70710678,-0.70710678/)
		 dnor(8,:) = (/0.00000000,0.70710678,-0.70710678/)
		 dnor(9,:) = (/0.00000000,0.70710678,0.70710678/)
		 dnor(10,:) = (/0.00000000,0.70710678,0.70710678/)
		 dnor(11,:) = (/0.70710678,0.00000000,0.70710678/)
		 dnor(12,:) = (/0.70710678,0.00000000,0.70710678/)
		 !dnor(13,:) = (/0.40824829,0.40824829,0.81649658/)
		 !dnor(14,:) = (/-0.40824829,0.40824829,0.81649658/)
		 !dnor(15,:) = (/0.40824829,-0.40824829,0.81649658/)
		 !dnor(16,:) = (/0.40824829,0.40824829,-0.81649658/)
		 !dnor(17,:) = (/0.40824829,0.81649658,0.40824829/)
		 !dnor(18,:) = (/-0.40824829,0.81649658,0.40824829/)
		 !dnor(19,:) = (/0.40824829,-0.81649658,0.40824829/)
		 !dnor(20,:) = (/0.40824829,0.81649658,-0.40824829/)
		 !dnor(21,:) = (/0.81649658,0.40824829,0.40824829/)
		 !dnor(22,:) = (/-0.81649658,0.40824829,0.40824829/)
		 !dnor(23,:) = (/0.81649658,-0.40824829,0.40824829/)
		 !dnor(24,:) = (/0.81649658,0.40824829,-0.40824829/)  
      else if(iphase .eq. 2) then !fcc (12)
	  
         if (cubicslip == 0) then ! cubic slip
		 
        ddir(1,:) = (/0.70710678,-0.70710678,0.00000000/)
	    ddir(2,:) = (/0.00000000,0.70710678,-0.70710678/)
		ddir(3,:) = (/0.70710678,0.00000000,-0.70710678/)
		ddir(4,:) = (/0.70710678,0.70710678,0.00000000/)
		ddir(5,:) = (/0.00000000,0.70710678,-0.70710678/)
		ddir(6,:) = (/0.70710678,0.00000000,0.70710678/)
		ddir(7,:) = (/0.70710678,0.70710678,0.00000000/)
		ddir(8,:) = (/0.00000000,0.70710678,0.70710678/)
		ddir(9,:) = (/0.70710678,0.00000000,-0.70710678/)
		ddir(10,:) = (/0.70710678,-0.70710678,0.00000000/)
		ddir(11,:) = (/0.00000000,0.70710678,0.70710678/)
		ddir(12,:) = (/0.70710678,0.00000000,0.70710678/)
		dnor(1,:) = (/0.57735027,0.57735027,0.57735027/)
		dnor(2,:) = (/0.57735027,0.57735027,0.57735027/)
		dnor(3,:) = (/0.57735027,0.57735027,0.57735027/)
		dnor(4,:) = (/-0.57735027,0.57735027,0.57735027/)
		dnor(5,:) = (/-0.57735027,0.57735027,0.57735027/)
		dnor(6,:) = (/-0.57735027,0.57735027,0.57735027/)
		dnor(7,:) = (/0.57735027,-0.57735027,0.57735027/)
		dnor(8,:) = (/0.57735027,-0.57735027,0.57735027/)
		dnor(9,:) = (/0.57735027,-0.57735027,0.57735027/)
		dnor(10,:) = (/0.57735027,0.57735027,-0.57735027/)
		dnor(11,:) = (/0.57735027,0.57735027,-0.57735027/)
		dnor(12,:) = (/0.57735027,0.57735027,-0.57735027/)
		
         else
		 
        ddir(1,:) = (/0.70710678,-0.70710678,0.00000000/)
        ddir(2,:) = (/0.00000000,0.70710678,-0.70710678/)
        ddir(3,:) = (/0.70710678,0.00000000,-0.70710678/)
        ddir(4,:) = (/0.70710678,0.70710678,0.00000000/)
        ddir(5,:) = (/0.00000000,0.70710678,-0.70710678/)
        ddir(6,:) = (/0.70710678,0.00000000,0.70710678/)
		ddir(7,:) = (/0.70710678,0.70710678,0.00000000/)
		ddir(8,:) = (/0.00000000,0.70710678,0.70710678/)
		ddir(9,:) = (/0.70710678,0.00000000,-0.70710678/)
		ddir(10,:) = (/0.70710678,-0.70710678,0.00000000/)
		ddir(11,:) = (/0.00000000,0.70710678,0.70710678/)
		ddir(12,:) = (/0.70710678,0.00000000,0.70710678/)
        ddir(13,:) = (/0.00000000,0.70710678,0.70710678/)
        ddir(14,:) = (/0.00000000,0.70710678,-0.70710678/)
        ddir(15,:) = (/0.70710678,0.00000000,0.70710678/)
        ddir(16,:) = (/0.70710678,0.00000000,-0.70710678/)
        ddir(17,:) = (/0.70710678,0.70710678,0.000000000/)
        ddir(18,:) = (/0.70710678,-0.70710678,0.000000000/)
		dnor(1,:) = (/0.57735027,0.57735027,0.57735027/)
		dnor(2,:) = (/0.57735027,0.57735027,0.57735027/)
		dnor(3,:) = (/0.57735027,0.57735027,0.57735027/)
		dnor(4,:) = (/-0.57735027,0.57735027,0.57735027/)
		dnor(5,:) = (/-0.57735027,0.57735027,0.57735027/)
		dnor(6,:) = (/-0.57735027,0.57735027,0.57735027/)
		dnor(7,:) = (/0.57735027,-0.57735027,0.57735027/)
		dnor(8,:) = (/0.57735027,-0.57735027,0.57735027/)
		dnor(9,:) = (/0.57735027,-0.57735027,0.57735027/)
		dnor(10,:) = (/0.57735027,0.57735027,-0.57735027/)
		dnor(11,:) = (/0.57735027,0.57735027,-0.57735027/)
		dnor(12,:) = (/0.57735027,0.57735027,-0.57735027/)
        dnor(13,:) = (/1.00000000,0.00000000,0.00000000/)
        dnor(14,:) = (/1.00000000,0.00000000,0.00000000/)
        dnor(15,:) = (/0.00000000,1.00000000,0.00000000/)
        dnor(16,:) = (/0.00000000,1.00000000,0.00000000/)
        dnor(17,:) = (/0.00000000,0.00000000,1.00000000/)
        dnor(18,:) = (/0.00000000,0.00000000,1.00000000/)
		 
         end if 	  
	  
      else if (iphase .eq. 4) then ! olivine (7)
	    ddir(1,:) = (/1.0,0.0,0.0/)
		ddir(2,:) = (/1.0,0.0,0.0/)
		ddir(3,:) = (/0.0,0.0,1.0/)
		ddir(4,:) = (/0.0,0.0,1.0/)
        ddir(5,:) = (/1.0,0.0,0.0/)
        ddir(6,:) = (/1.0,0.0,0.0/)
        ddir(7,:) = (/0.0,0.0,1.0/)
        dnor(1,:) = (/0.0,1.0,0.0/)
        dnor(2,:) = (/0.0,0.0,1.0/)
        dnor(3,:) = (/1.0,0.0,0.0/)
        dnor(4,:) = (/0.0,1.0,0.0/)
        dnor(5,:) = (/0.0,0.7071,0.7071/)
        dnor(6,:) = (/0.0,0.9487,0.3162/)
        dnor(7,:) = (/0.7071,0.7071,0.0/)
      else if (iphase .eq. 5) then ! alpha-Uranium (8)
! slip directions of alpha-Uranium
! see McCabe, Tome et al 2010 (Figure 2)
          ddir(1,:) = (/1.0,0.0,0.0/)
		  ddir(2,:) = (/1.0,0.0,0.0/)
		  ddir(3,:) = (/0.43731,-0.89931,0.0/) ! [1-10](110) -> [a,-b,0](b,a,0)
		  ddir(4,:) = (/0.43731,0.89931,0.0/) ! [110](1-10) -> [a,b,0](b,-a,0)
		  ddir(5,:) = (/0.24074,-0.49507,0.83483/) ! [1-12](021) -> [a,-b,2c](0,c,b/2)
		  ddir(6,:) = (/-0.24074,-0.49507,0.83483/) ! [-1-12](021) -> [-a,-b,2c](0,c,b/2)
		  ddir(7,:) = (/0.24074,0.49507,0.83483/) ! [112](0-21) -> [a,b,2c](0,c,-b/2)
		  ddir(8,:) = (/0.24074,-0.49507,-0.83483/) ! [1-1-2](0-21) -> [a,-b,-2c](0,c,-b/2)
! slip plane normals of alpha-Uranium
! see McCabe, Tome et al 2010 (Figure 2)
		  dnor(1,:) = (/0.0,1.0,0.0/)
		  dnor(2,:) = (/0.0,0.0,1.0/)
		  dnor(3,:) = (/0.89931,0.43731,0.0/) ! [1-10](110) -> [a,-b,0](b,a,0)
		  dnor(4,:) = (/0.89931,-0.43731,0.0/) ! [110](1-10) -> [a,b,0](b,-a,0)
		  dnor(5,:) = (/0.0,0.86013,0.51008/) ! [1-12](021) -> [a,-b,2c](0,c,b/2)
		  dnor(6,:) = (/0.0,0.86013,0.51008/) ! [-1-12](021) -> [-a,-b,2c](0,c,b/2)
		  dnor(7,:) = (/0.0,0.86013,-0.51008/) ! [112](0-21) -> [a,b,2c](0,c,-b/2)
		  dnor(8,:) = (/0.0,0.86013,-0.51008/) ! [1-1-2](0-21) -> [a,-b,-2c](0,c,-b/2)
		  dtwindir(1,:) = (/0.82482,-0.56540,0.0/)
		  dtwindir(2,:) = (/-0.82482,-0.56540,0.0/)
! twin normals (K_1) of alpha-Uranium
! see Zhou, Xiao, Wang et al. 2016 (Table 2)
          dtwinnor(1,:) = (/0.56540,0.82482,0.0/) ! eta_1 = [3-10] -> [3a,-b,0], K_1 = (130) -> normal is [b,3a,0]
          dtwinnor(2,:) = (/-0.56540,0.82482,0.0/) ! eta_1 = [-3-10] -> [-3a,-b,0], K_1 = (-130) -> normal is [-b,3a,0]
      end if     

      do k=1,L ! rotate slip directions (without twinning)
        do i=1,m
        tdir(i) = ddir(k,i)
        tnor(i) = dnor(k,i)
        end do
        
        if(iphase .eq. 0) then !hcp ET added
          tdir(3) =  tdir(3)*caratio
          tnor(3) =  tnor(3)/caratio
        end if  
        
        tdir1 = matmul(xrot,tdir)
        tnor1 = matmul(xrot,tnor)
        
        xdirmag = sqrt(dot_product(tdir1,tdir1))
        xnormag = sqrt(dot_product(tnor1,tnor1))
        
        do i=1,m
        ddir1(k,i) = tdir1(i)/xdirmag
        dnor1(k,i) = tnor1(i)/xnormag
        end do
      end do

      if (iphase .eq. 5) then ! alpha-Uranium (2 twin systems)

        do k=1,nTwin ! rotate twin direction and normal with gmatinv
          do i=1,m
            ttwindir(i) = dtwindir(k,i)
            ttwinnor(i) = dtwinnor(k,i)
          end do

          ttwindir1 = matmul(xrot,ttwindir) ! rotation with gmatinv
          ttwinnor1 = matmul(xrot,ttwinnor)

          xtwindirmag = sqrt(dot_product(ttwindir1,ttwindir1))
          xtwinnormag = sqrt(dot_product(ttwinnor1,ttwinnor1))

          do i=1,m ! assign value to output
            dtwindir1(k,i) = ttwindir1(i)/xtwindirmag
            dtwinnor1(k,i) = ttwinnor1(i)/xtwinnormag
          end do
        end do

      end if
      
      return
      end 

